### Variables
@baseUrl = http://localhost:8080/api
# Note: Tokens expire after 24 hours. Get fresh tokens by running the login requests below.
@adminToken = eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI1NTBlODQwMC1lMjliLTQxZDQtYTcxNi00NDY2NTU0NDAwMDEiLCJlbWFpbCI6ImFkbWluQG1vcy50ZXN0IiwidXNlclR5cGUiOiJBRE1JTiIsImlhdCI6MTc2MDExMjU1NywiZXhwIjoxNzYwMTk4OTU3fQ.yzU4Oa_8LtpZ2W6Xs4XBsgnOBcJLJ3CTLwGno3maqd15DcwhUei5BTXy9AqCXKLy41C5dFgMiAYyS17Ius5MTw
@caregiverToken = YOUR_CAREGIVER_TOKEN_HERE
@residentToken = YOUR_RESIDENT_TOKEN_HERE

### Test Users
@adminId = 550e8400-e29b-41d4-a716-446655440001
@caregiverId = 550e8400-e29b-41d4-a716-446655440002
@residentId = 550e8400-e29b-41d4-a716-446655440004

### 1. Login as Admin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@mos.test",
  "password": "password123"
}

### 2. Login as Caregiver
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "caregiver@mos.test",
  "password": "password123"
}

### 3. Login as Resident
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "resident1@mos.test",
  "password": "password123"
}

### 4. Get Current User Info
GET {{baseUrl}}/auth/me
Authorization: Bearer {{adminToken}}

### 5. Create Reminder (Admin)
POST {{baseUrl}}/users/{{adminId}}/reminders
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "type": "once",
  "category": "meal",
  "dateTime": "2024-01-25T12:00:00Z",
  "note": "Test reminder from admin"
}

### 6. Create Reminder (Caregiver for Resident)
POST {{baseUrl}}/users/{{residentId}}/reminders
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "type": "daily",
  "category": "medication",
  "dateTime": "2024-01-25T08:00:00Z",
  "note": "Morning medication"
}

### 7. Get Reminders for User
GET {{baseUrl}}/users/{{residentId}}/reminders
Authorization: Bearer {{caregiverToken}}

### 8. Update Reminder
PUT {{baseUrl}}/users/{{residentId}}/reminders/{{reminderId}}
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "type": "once",
  "category": "medication",
  "dateTime": "2024-01-25T09:00:00Z",
  "note": "Updated reminder note"
}

### 9. Delete Reminder
DELETE {{baseUrl}}/users/{{residentId}}/reminders/{{reminderId}}
Authorization: Bearer {{caregiverToken}}

### 10. Set Meal Requirements (New format with array)
POST {{baseUrl}}/users/{{residentId}}/meal-requirements
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "requirements": ["Vegetarisk", "Glutenfri", "Custom requirement"]
}

### 11. Get Meal Requirements
GET {{baseUrl}}/users/{{residentId}}/meal-requirements
Authorization: Bearer {{caregiverToken}}

### 12. Test Invalid Category (should fail)
POST {{baseUrl}}/users/{{residentId}}/reminders
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "type": "once",
  "category": "lunch",
  "dateTime": "2024-01-25T12:00:00Z",
  "note": "This should fail"
}

### 13. Test admin accessing resident data
GET {{baseUrl}}/users/{{residentId}}/reminders
Authorization: Bearer {{adminToken}}

### ===== NEW USER PERMISSION SYSTEM ENDPOINTS =====

### 14. Get Current User Permissions
GET {{baseUrl}}/user-management/permissions
Authorization: Bearer {{adminToken}}

### 15. Create New User (Admin only)
POST {{baseUrl}}/user-management/admin/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "New Admin User",
  "email": "newadmin@mos.test",
  "phone": "+46 70 123 4567",
  "userType": "ADMIN"
}

### 16. Create New Caregiver (Admin only)
POST {{baseUrl}}/user-management/admin/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "New Caregiver",
  "email": "newcaregiver@mos.test",
  "phone": "+46 70 234 5678",
  "userType": "CAREGIVER"
}

### 17. Create New Resident (Admin only)
POST {{baseUrl}}/user-management/admin/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "New Resident",
  "email": "newresident@mos.test",
  "phone": "+46 70 345 6789",
  "userType": "RESIDENT"
}

### 18. Get All Caretakers (for caregiver)
GET {{baseUrl}}/user-management/caretakers
Authorization: Bearer {{caregiverToken}}

### 19. Create New Caretaker (caregiver only)
POST {{baseUrl}}/user-management/caretakers
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "name": "New Resident",
  "email": "newresident@mos.test",
  "phone": "+46 70 123 4567"
}

### 20. Set Permissions for Caretaker (use ID from step 19 response)
PUT {{baseUrl}}/user-management/caretakers/550e8400-e29b-41d4-a716-446655440004/permissions
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "permissions": [
    "VIEW_REMINDERS",
    "CREATE_REMINDERS"
  ]
}

### 21. Delete Caretaker (use ID from step 19 response)
DELETE {{baseUrl}}/user-management/caretakers/550e8400-e29b-41d4-a716-446655440004
Authorization: Bearer {{caregiverToken}}

### ===== PERMISSION TESTING =====

### 22. Test Permission Denied (resident trying to access admin endpoint)
GET {{baseUrl}}/user-management/caretakers
Authorization: Bearer {{residentToken}}

### 23. Test Permission Denied (caregiver without MEAL_REQUIREMENTS permission)
POST {{baseUrl}}/users/{{residentId}}/meal-requirements
Authorization: Bearer {{caregiverToken}}
Content-Type: application/json

{
  "requirements": ["Test requirement"]
}

### ===== UTILITY ENDPOINTS =====

### 24. Get All Users (admin only)
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}

### 25. Health Check
GET {{baseUrl}}/health
